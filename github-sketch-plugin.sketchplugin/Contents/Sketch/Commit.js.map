{"version":3,"sources":["webpack://exports/webpack/bootstrap","webpack://exports/./node_modules/sketch-module-fs/index.js","webpack://exports/./node_modules/sketch-module-google-analytics/index.js","webpack://exports/./node_modules/sketch-module-user-preferences/index.js","webpack://exports/./src/analytics.js","webpack://exports/./src/commands/Commit.js","webpack://exports/./src/common.js","webpack://exports/./src/preferences.js","webpack://exports/external \"sketch/dom\""],"names":["key","sendEvent","context","category","action","label","value","sendError","error","checkForFile","executeSafely","currentBranch","getCurrentBranch","prefs","getUserPreferences","commitMsg","createInputWithCheckbox","diffByDefault","responseCode","message","checked","exportArtboards","command","split","join","exec","document","showMessage","Document","require","setIconForAlert","alert","reloadCurrentSketchDocument","path","fileURL","close","open","func","e","createFailAlert","task","NSTask","alloc","init","pipe","NSPipe","errPipe","getCurrentDirectory","setLaunchPath_","setArguments_","NSArray","arrayWithArray_","standardOutput","standardError","launch","errData","fileHandleForReading","readDataToEndOfFile","data","terminationStatus","length","NSString","initWithData_encoding_","NSUTF8StringEncoding","NSException","raise_format_","URLByDeletingLastPathComponent","getGitDirectory","trim","replace","getCurrentFileName","lastPathComponent","title","buttonToReport","console","log","NSAlert","informativeText","messageText","addButtonWithTitle","runModal","errorString","JSON","stringify","urlString","encodeURIComponent","url","NSURL","URLWithString","NSWorkspace","sharedWorkspace","openURL","createInput","msg","okLabel","cancelLabel","accessory","NSView","initWithFrame","NSMakeRect","input","NSTextField","editable","addSubview","setMessageText","setAccessoryView","stringValue","checkboxMsg","TextArea","checkbox","NSButton","setButtonType","state","view","getValue","createSelect","items","selectedItemIndex","NSComboBox","addItemsWithObjectValues","selectItemAtIndex","sel","indexOfSelectedItem","index","currentBranchCommand","branch","currentFileName","currentFileNameWithoutExtension","exportFolder","exportFormat","exportScale","includeOverviewFile","pluginPath","scriptPath","bundlePath","NSBundle","mainBundle","fileFolder","copyCommandlet","checkForCommandlet","checkForGitRepository","x","y","width","heigh","scrollView","NSScrollView","borderStyle","NSLineBorder","contentSize","NSTextView","height","minSize","NSMakeSize","maxSize","Infinity","documentView","string","keyPref","PREFS_FILE","LOCAL_PREFS","autoExportOnSave","GLOBAL_PREFS","terminal","sendAnalytics","setUserPreferences","localPrefs","globalPrefs","Object","keys","forEach","indexOf","k","fs","writeFile","prefsManager"],"mappings":";;;;;;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;AClFA;AACA;AACA;AACA,iIAAiI;AACjI;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACrDA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;ACrCA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;;;;;;;;;;;;;;;;;;;ACtCA;AACA;AAEA,IAAMA,MAAM,aAAZ;AAEO,SAASC,SAAT,CAAoBC,OAApB,EAA6BC,QAA7B,EAAuCC,MAAvC,EAA+CC,KAA/C,EAAsDC,KAAtD,EAA6D;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAAO,IAAP;AACD;AAEM,SAASC,SAAT,CAAoBL,OAApB,EAA6BM,KAA7B,EAAoC;AACzC;AACA;AACA,SAAO,IAAP;AACD,C;;;;;;;;;;;;;;;ACrBD;AAAA;AACA;AACA;AACA;AAEA,+DAAe,UAAUN,OAAV,EAAmB;AAChC,MAAI,CAAC,4DAAAO,CAAaP,OAAb,CAAL,EAA4B;AAAE;AAAQ;;AACtCQ,EAAA,6DAAAA,CAAcR,OAAd,EAAuB,YAAY;AACjCD,IAAA,4DAAAA,CAAUC,OAAV,EAAmB,QAAnB,EAA6B,iBAA7B;AACA,QAAIS,gBAAgB,gEAAAC,CAAiBV,OAAjB,CAApB;AACA,QAAMW,QAAQ,uEAAAC,CAAmBZ,OAAnB,CAAd;AACA,QAAIa,YAAY,uEAAAC,CAAwBd,OAAxB,EAAiC,gBAAgBS,aAAhB,GAAgC,GAAjE,EAAsE,iCAAtE,EAAyGE,MAAMI,aAA/G,EAA8H,QAA9H,CAAhB;;AAEA,QAAIF,UAAUG,YAAV,IAA0B,IAA1B,IAAkCH,UAAUI,OAAV,IAAqB,IAA3D,EAAiE;AAC/D,UAAIJ,UAAUK,OAAd,EAAuB;AACrBnB,QAAA,4DAAAA,CAAUC,OAAV,EAAmB,QAAnB,EAA6B,kBAA7B;AACAmB,QAAA,+DAAAA,CAAgBnB,OAAhB,EAAyBW,KAAzB;AACD;;AACDZ,MAAA,4DAAAA,CAAUC,OAAV,EAAmB,QAAnB,EAA6B,WAA7B;AACA,UAAIoB,oCAA4BP,UAAUI,OAAV,CAAkBI,KAAlB,CAAwB,GAAxB,EAA6BC,IAA7B,CAAkC,KAAlC,CAA5B,gBAAJ;AACA,UAAIL,UAAU,oDAAAM,CAAKvB,OAAL,EAAcoB,OAAd,CAAd;AACApB,cAAQwB,QAAR,CAAiBC,WAAjB,CAA6BR,QAAQI,KAAR,CAAc,IAAd,EAAoBC,IAApB,CAAyB,GAAzB,CAA7B;AACD;AACF,GAhBD;AAiBD,C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxBD;AACA;;AAEA,IAAMI,WAAW,mBAAAC,CAAQ,8BAAR,EAAsBD,QAAvC;;AAEO,SAASE,eAAT,CAA0B5B,OAA1B,EAAmC6B,KAAnC,EAA0C,CAC/C;AACA;AACD;AAEM,SAASC,2BAAT,CAAsC9B,OAAtC,EAA+C;AACpD;AACA,MAAI+B,OAAO/B,QAAQwB,QAAR,CAAiBQ,OAAjB,GAA2BD,IAA3B,EAAX;AACAA,SAAOA,OAAO,EAAd;AACA/B,UAAQwB,QAAR,CAAiBS,KAAjB;AACAP,WAASQ,IAAT,CAAcH,IAAd;AACA/B,UAAQwB,QAAR,CAAiBC,WAAjB,CAA6B,wCAA7B;AACD;AAEM,SAASjB,aAAT,CAAwBR,OAAxB,EAAiCmC,IAAjC,EAAuC;AAC5C,MAAI;AACFA,SAAKnC,OAAL;AACD,GAFD,CAEE,OAAOoC,CAAP,EAAU;AACV/B,IAAA,4DAAAA,CAAUL,OAAV,EAAmBoC,CAAnB;AACAC,oBAAgBrC,OAAhB,EAAyB,WAAzB,EAAsCoC,CAAtC,EAAyC,IAAzC;AACD;AACF;AAEM,SAASb,IAAT,CAAevB,OAAf,EAAwBoB,OAAxB,EAAiC;AACtC,MAAIkB,OAAOC,OAAOC,KAAP,GAAeC,IAAf,EAAX;AACA,MAAIC,OAAOC,OAAOD,IAAP,EAAX;AACA,MAAIE,UAAUD,OAAOD,IAAP,EAAd;AAEA,MAAIX,OAAOc,oBAAoB7C,OAApB,CAAX;AACAoB,2BAAiBW,IAAjB,mBAA6BX,OAA7B;AAEAkB,OAAKQ,cAAL,CAAoB,WAApB;AACAR,OAAKS,aAAL,CAAmBC,QAAQC,eAAR,CAAwB,CAAC,IAAD,EAAO,IAAP,EAAa7B,OAAb,CAAxB,CAAnB;AACAkB,OAAKY,cAAL,GAAsBR,IAAtB;AACAJ,OAAKa,aAAL,GAAqBP,OAArB;AACAN,OAAKc,MAAL;AAEA,MAAMC,UAAUT,QAAQU,oBAAR,GAA+BC,mBAA/B,EAAhB;AACA,MAAMC,OAAOd,KAAKY,oBAAL,GAA4BC,mBAA5B,EAAb;;AAEA,MAAIjB,KAAKmB,iBAAL,MAA4B,CAAhC,EAAmC;AACjC,QAAIxC,UAAU,cAAd;;AACA,QAAIoC,WAAW,IAAX,IAAmBA,QAAQK,MAAR,EAAvB,EAAyC;AACvCzC,gBAAU0C,SAASnB,KAAT,GAAiBoB,sBAAjB,CAAwCP,OAAxC,EAAiDQ,oBAAjD,CAAV;AACD,KAFD,MAEO,IAAIL,QAAQ,IAAR,IAAgBA,KAAKE,MAAL,EAApB,EAAmC;AACxCzC,gBAAU0C,SAASnB,KAAT,GAAiBoB,sBAAjB,CAAwCJ,IAAxC,EAA8CK,oBAA9C,CAAV;AACD;;AACD,WAAOC,YAAYC,aAAZ,CAA0B,QAA1B,EAAoC9C,OAApC,CAAP;AACD;;AAED,SAAO0C,SAASnB,KAAT,GAAiBoB,sBAAjB,CAAwCJ,IAAxC,EAA8CK,oBAA9C,CAAP;AACD;AAEM,SAAShB,mBAAT,CAA8B7C,OAA9B,EAAuC;AAC5C,SAAOA,QAAQwB,QAAR,CAAiBQ,OAAjB,GAA2BgC,8BAA3B,GAA4DjC,IAA5D,EAAP;AACD;AAEM,SAASkC,eAAT,CAA0BjE,OAA1B,EAAmC;AACxC,SAAOuB,KAAKvB,OAAL,EAAc,+BAAd,EAA+CkE,IAA/C,GAAsDC,OAAtD,CAA8D,QAA9D,EAAwE,EAAxE,CAAP;AACD;AAEM,SAASC,kBAAT,CAA6BpE,OAA7B,EAAsC;AAC3C,SAAOA,QAAQwB,QAAR,CAAiBQ,OAAjB,GAA2BqC,iBAA3B,EAAP;AACD;AAEM,SAAShC,eAAT,CAA0BrC,OAA1B,EAAmCsE,KAAnC,EAA0ChE,KAA1C,EAAiDiE,cAAjD,EAAiE;AACtEC,UAAQC,GAAR,CAAYnE,KAAZ;AACA,MAAIuB,QAAQ6C,QAAQlC,KAAR,GAAgBC,IAAhB,EAAZ;AACAZ,QAAM8C,eAAN,GAAwB,KAAKrE,KAA7B;AACAuB,QAAM+C,WAAN,GAAoBN,KAApB;AACAzC,QAAMgD,kBAAN,CAAyB,IAAzB;;AACA,MAAIN,cAAJ,EAAoB;AAClB1C,UAAMgD,kBAAN,CAAyB,cAAzB;AACD;;AACDjD,kBAAgB5B,OAAhB,EAAyB6B,KAAzB;AAEA,MAAIb,eAAea,MAAMiD,QAAN,EAAnB;;AAEA,MAAI9D,gBAAgB,IAApB,EAA0B;AACxB,QAAI+D,cAAczE,KAAlB;;AACA,QAAI,QAAOA,KAAP,MAAiB,QAArB,EAA+B;AAC7B,UAAI;AACFyE,sBAAcC,KAAKC,SAAL,CAAe3E,KAAf,EAAsB,IAAtB,EAA4B,IAA5B,CAAd;;AACA,YAAIyE,gBAAgB,IAApB,EAA0B;AACxBA,wBAAczE,KAAd;AACD;AACF,OALD,CAKE,OAAO8B,CAAP,EAAU,CAAE;AACf;;AACD,QAAI8C,yFAAkFC,mBAAmB,mEAAmEJ,WAAnE,GAAiF,OAApG,CAAlF,CAAJ;AACA,QAAIK,MAAMC,MAAMC,aAAN,CAAoBJ,SAApB,CAAV;AACAK,gBAAYC,eAAZ,GAA8BC,OAA9B,CAAsCL,GAAtC;AACD;;AAED,SAAO;AACLpE;AADK,GAAP;AAGD;AAEM,SAAS0E,WAAT,CAAsB1F,OAAtB,EAA+B2F,GAA/B,EAAoCC,OAApC,EAA6CC,WAA7C,EAA0D;AAC/D,MAAIC,YAAYC,OAAOvD,KAAP,GAAewD,aAAf,CAA6BC,WAAW,CAAX,EAAc,CAAd,EAAiB,GAAjB,EAAsB,EAAtB,CAA7B,CAAhB;AACA,MAAIC,QAAQC,YAAY3D,KAAZ,GAAoBwD,aAApB,CAAkCC,WAAW,CAAX,EAAc,EAAd,EAAkB,GAAlB,EAAuB,EAAvB,CAAlC,CAAZ;AACAC,QAAME,QAAN,GAAiB,IAAjB;AACAN,YAAUO,UAAV,CAAqBH,KAArB;AAEA,MAAIrE,QAAQ6C,QAAQlC,KAAR,GAAgBC,IAAhB,EAAZ;AACAZ,QAAMyE,cAAN,CAAqBX,GAArB;AACA9D,QAAMgD,kBAAN,CAAyBe,WAAW,IAApC;AACA/D,QAAMgD,kBAAN,CAAyBgB,eAAe,QAAxC;AACAjE,kBAAgB5B,OAAhB,EAAyB6B,KAAzB;AACAA,QAAM0E,gBAAN,CAAuBT,SAAvB;AAEA,MAAI9E,eAAea,MAAMiD,QAAN,EAAnB;AACA,MAAI7D,UAAUiF,MAAMM,WAAN,EAAd;AAEA,SAAO;AACLxF,kBAAcA,YADT;AAELC,aAASA;AAFJ,GAAP;AAID;AAEM,SAASH,uBAAT,CAAkCd,OAAlC,EAA2C2F,GAA3C,EAAgDc,WAAhD,EAA6DvF,OAA7D,EAAsE0E,OAAtE,EAA+EC,WAA/E,EAA4F;AACjG,MAAIC,YAAYC,OAAOvD,KAAP,GAAewD,aAAf,CAA6BC,WAAW,CAAX,EAAc,CAAd,EAAiB,GAAjB,EAAsB,GAAtB,CAA7B,CAAhB;AACA,MAAIC,QAAQQ,SAAS,CAAT,EAAY,EAAZ,EAAgB,GAAhB,EAAqB,EAArB,CAAZ;AACA,MAAIC,WAAWC,SAASpE,KAAT,GAAiBwD,aAAjB,CAA+BC,WAAW,CAAX,EAAc,CAAd,EAAiB,GAAjB,EAAsB,EAAtB,CAA/B,CAAf;AACAU,WAASE,aAAT,CAAuB,CAAvB;AACAF,WAASrC,KAAT,GAAiBmC,WAAjB;AACAE,WAASG,KAAT,GAAiB5F,UAAU,CAAV,GAAc,CAA/B;AACA4E,YAAUO,UAAV,CAAqBH,MAAMa,IAA3B;AACAjB,YAAUO,UAAV,CAAqBM,QAArB;AAEA,MAAI9E,QAAQ6C,QAAQlC,KAAR,GAAgBC,IAAhB,EAAZ;AACAZ,QAAMyE,cAAN,CAAqBX,GAArB;AACA9D,QAAMgD,kBAAN,CAAyBe,WAAW,IAApC;AACA/D,QAAMgD,kBAAN,CAAyBgB,eAAe,QAAxC;AACAjE,kBAAgB5B,OAAhB,EAAyB6B,KAAzB;AACAA,QAAM0E,gBAAN,CAAuBT,SAAvB;AAEA,MAAI9E,eAAea,MAAMiD,QAAN,EAAnB;AACA,MAAI7D,UAAUiF,MAAMc,QAAN,EAAd;AAEA,SAAO;AACLhG,kBAAcA,YADT;AAELC,aAASA,OAFJ;AAGLC,aAASyF,SAASG,KAAT,MAAoB;AAHxB,GAAP;AAKD;AAEM,SAASG,YAAT,CAAuBjH,OAAvB,EAAgC2F,GAAhC,EAAqCuB,KAArC,EAA4CC,iBAA5C,EAA+DvB,OAA/D,EAAwEC,WAAxE,EAAqF;AAC1FsB,sBAAoBA,qBAAqB,CAAzC;AAEA,MAAIrB,YAAYsB,WAAW5E,KAAX,GAAmBwD,aAAnB,CAAiCC,WAAW,CAAX,EAAc,CAAd,EAAiB,GAAjB,EAAsB,EAAtB,CAAjC,CAAhB;AACAH,YAAUuB,wBAAV,CAAmCH,KAAnC;AACApB,YAAUwB,iBAAV,CAA4BH,iBAA5B;AAEA,MAAItF,QAAQ6C,QAAQlC,KAAR,GAAgBC,IAAhB,EAAZ;AACAZ,QAAMyE,cAAN,CAAqBX,GAArB;AACA9D,QAAMgD,kBAAN,CAAyBe,WAAW,IAApC;AACA/D,QAAMgD,kBAAN,CAAyBgB,eAAe,QAAxC;AACAjE,kBAAgB5B,OAAhB,EAAyB6B,KAAzB;AACAA,QAAM0E,gBAAN,CAAuBT,SAAvB;AAEA,MAAI9E,eAAea,MAAMiD,QAAN,EAAnB;AACA,MAAIyC,MAAMzB,UAAU0B,mBAAV,EAAV;AAEA,SAAO;AACLxG,kBAAcA,YADT;AAELyG,WAAOF;AAFF,GAAP;AAID;AAEM,SAAS7G,gBAAT,CAA2BV,OAA3B,EAAoC;AACzC,MAAM+B,OAAOc,oBAAoB7C,OAApB,CAAb;AACA,MAAM0H,sCAA8B3F,IAA9B,0CAAN;AACA,MAAI4F,MAAJ;;AACA,MAAI;AACFA,aAASpG,KAAKvB,OAAL,EAAc0H,oBAAd,EAAoCrG,KAApC,CAA0C,IAA1C,EAAgD,CAAhD,CAAT;AACD,GAFD,CAEE,OAAOe,CAAP,EAAU;AACVuF,aAAS,QAAT;AACD;;AACD,SAAOA,MAAP;AACD;AAEM,SAASxG,eAAT,CAA0BnB,OAA1B,EAAmCW,KAAnC,EAA0C;AAC/C,MAAMiH,kBAAkBxD,mBAAmBpE,OAAnB,CAAxB;AACA,MAAM+B,OAAOc,oBAAoB7C,OAApB,CAAb;AACA,MAAM6H,kCAAkCD,gBAAgBzD,OAAhB,CAAwB,WAAxB,EAAqC,EAArC,CAAxC;AAH+C,MAIxC2D,YAJwC,GAIwBnH,KAJxB,CAIxCmH,YAJwC;AAAA,MAI1BC,YAJ0B,GAIwBpH,KAJxB,CAI1BoH,YAJ0B;AAAA,MAIZC,WAJY,GAIwBrH,KAJxB,CAIZqH,WAJY;AAAA,MAICC,mBAJD,GAIwBtH,KAJxB,CAICsH,mBAJD;AAK/C,MAAMC,aAAalI,QAAQmI,UAAR,CAAmBhE,OAAnB,CAA2B,gCAA3B,EAA6D,EAA7D,EAAiEA,OAAjE,CAAyE,IAAzE,EAA+E,KAA/E,CAAnB;AACA,MAAMiE,aAAaC,SAASC,UAAT,GAAsBF,UAAtB,EAAnB;AACA,MAAMG,aAAaT,eAAe,GAAf,GAAqBD,+BAAxC;AACA,MAAMzG,oBAAa8G,UAAb,kCAA8CnG,IAA9C,kBAAwD+F,YAAxD,kBAA0ES,UAA1E,kBAA0FH,UAA1F,kBAA0GR,eAA1G,kBAA+HG,gBAAgB,KAA/I,kBAA0JC,WAA1J,kBAA2KC,mBAA3K,OAAN;AACA,SAAO1G,KAAKvB,OAAL,EAAcoB,OAAd,CAAP;AACD;AAEM,SAASoH,cAAT,CAAyBxI,OAAzB,EAAkC;AACrC,MAAMkI,aAAalI,QAAQmI,UAAR,CAAmBhE,OAAnB,CAA2B,gCAA3B,EAA6D,EAA7D,EAAiEA,OAAjE,CAAyE,IAAzE,EAA+E,KAA/E,CAAnB;AACA,MAAMpC,OAAOc,oBAAoB7C,OAApB,CAAb;AACA,MAAMoB,uBAAgB8G,UAAhB,4CAA4DnG,IAA5D,2BAAiFA,IAAjF,mCAAN;AACA,SAAOR,KAAKvB,OAAL,EAAcoB,OAAd,CAAP;AACH;AAEM,SAASb,YAAT,CAAuBP,OAAvB,EAAgC;AACnC,MAAI;AACAoE,uBAAmBpE,OAAnB;AACA6C,wBAAoB7C,OAApB;AACA,WAAO,IAAP;AACH,GAJD,CAIE,OAAOoC,CAAP,EAAU;AACR/B,IAAA,4DAAAA,CAAUL,OAAV,EAAmB,cAAnB;AACAqC,oBAAgBrC,OAAhB,EAAyB,cAAzB,EAAyC,kDAAzC;AACA,WAAO,KAAP;AACH;AACJ;AAEM,SAASyI,kBAAT,CAA6BzI,OAA7B,EAAsC;AACzC,MAAI;AACA;AAIA6C,wBAAoB7C,OAApB;AACA,WAAO,IAAP;AACH,GAPD,CAOE,OAAOoC,CAAP,EAAU;AACR/B,IAAA,4DAAAA,CAAUL,OAAV,EAAmB,cAAnB;AACAqC,oBAAgBrC,OAAhB,EAAyB,cAAzB,EAAyC,kDAAzC;AACA,WAAO,KAAP;AACH;AACJ;AAEM,SAAS0I,qBAAT,CAAgC1I,OAAhC,EAAyC;AAC9C,MAAI;AACFiE,oBAAgBjE,OAAhB;AACA,WAAO,IAAP;AACD,GAHD,CAGE,OAAOoC,CAAP,EAAU;AACV/B,IAAA,4DAAAA,CAAUL,OAAV,EAAmB,sBAAnB;AACAqC,oBAAgBrC,OAAhB,EAAyB,sBAAzB,EAAiD,uCAAjD;AACA,WAAO,KAAP;AACD;AACF;;AAED,SAAS0G,QAAT,CAAmBiC,CAAnB,EAAsBC,CAAtB,EAAyBC,KAAzB,EAAgCC,KAAhC,EAAuC;AACrC,MAAMC,aAAaC,aAAaxG,KAAb,GAAqBwD,aAArB,CAAmCC,WAAW0C,CAAX,EAAcC,CAAd,EAAiBC,KAAjB,EAAwBC,KAAxB,CAAnC,CAAnB;AACAC,aAAWE,WAAX,GAAyBC,YAAzB;AACA,MAAMC,cAAcJ,WAAWI,WAAX,EAApB;AACA,MAAMjD,QAAQkD,WAAW5G,KAAX,GAAmBwD,aAAnB,CAAiCC,WAAW,CAAX,EAAc,CAAd,EAAiBkD,YAAYN,KAA7B,EAAoCM,YAAYE,MAAhD,CAAjC,CAAd;AACAnD,QAAMoD,OAAN,GAAgBC,WAAW,CAAX,EAAcJ,YAAYE,MAA1B,CAAhB;AACAnD,QAAMsD,OAAN,GAAgBD,WAAWJ,YAAYN,KAAvB,EAA8BY,QAA9B,CAAhB;AACAV,aAAWW,YAAX,GAA0BxD,KAA1B;AACA,SAAO;AACLa,UAAMgC,UADD;AAEL/B,cAAU;AAAA,aAAMd,MAAMyD,MAAN,EAAN;AAAA;AAFL,GAAP;AAID,C;;;;;;;;;;;;;;;;;;;;AChQD;AACA;AACA;AAEA,IAAMC,UAAU,WAAhB;AACA,IAAMC,aAAa,cAAnB;AACA,IAAMC,cAAc;AAClBhC,gBAAc,oBADI;AAElBC,gBAAc,KAFI;AAGlBC,eAAa,KAHK;AAIlBC,uBAAqB,IAJH;AAKlB8B,oBAAkB;AALA,CAApB;AAOA,IAAMC,eAAe;AACnBC,YAAU,UADS;AAEnBlJ,iBAAe,IAFI;AAGnBmJ,iBAAe;AAHI,CAArB;AAMO,SAAStJ,kBAAT,CAA6BZ,OAA7B,EAAsC;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEE,SAAO;AACH8H,kBAAc,oBADX;AAEHC,kBAAc,KAFX;AAGHC,iBAAa,KAHV;AAIHC,yBAAqB,IAJlB;AAKH8B,sBAAkB,KALf;AAMHE,cAAU,UANP;AAOHlJ,mBAAe,IAPZ;AAQHmJ,mBAAe;AARZ,GAAP;AAUH;AAEM,SAASC,kBAAT,CAA6BnK,OAA7B,EAAsCW,KAAtC,EAA6C;AAClD,MAAMyJ,aAAa,EAAnB;AACA,MAAMC,cAAc,EAApB;AACAC,SAAOC,IAAP,CAAY5J,KAAZ,EAAmB6J,OAAnB,CAA2B,aAAK;AAC9B,QAAIF,OAAOC,IAAP,CAAYT,WAAZ,EAAyBW,OAAzB,CAAiCC,CAAjC,MAAwC,CAAC,CAA7C,EAAgD;AAC9CN,iBAAWM,CAAX,IAAgB/J,MAAM+J,CAAN,CAAhB;AACD,KAFD,MAEO;AACLL,kBAAYK,CAAZ,IAAiB/J,MAAM+J,CAAN,CAAjB;AACD;AACF,GAND;;AAQA,MAAI;AACF,QAAI3I,OAAO,+DAAAkC,CAAgBjE,OAAhB,CAAX;AACA2K,IAAA,uDAAAA,CAAGC,SAAH,CAAa7I,OAAO,GAAP,GAAa8H,UAA1B,EAAsC7E,KAAKC,SAAL,CAAemF,UAAf,EAA2B,IAA3B,EAAiC,IAAjC,CAAtC;AACA7I,IAAA,oDAAAA,CAAKvB,OAAL,EAAc,cAAc+B,IAAd,GAAqB,GAArB,GAA2B8H,UAA3B,GAAwC,GAAtD;AACD,GAJD,CAIE,OAAOzH,CAAP,EAAU;AACVoC,YAAQC,GAAR,CAAYrC,CAAZ;AACD;;AACD,SAAO,qEAAAyI,CAAaV,kBAAb,CAAgCP,OAAhC,EAAyCS,WAAzC,CAAP;AACD,C;;;;;;;;;;;ACjED,uC","file":"Commit.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/commands/Commit.js\");\n","module.exports = {\n  mkdir: function (path) {\n    var error = null\n    var result = NSFileManager.defaultManager().createDirectoryAtPath_withIntermediateDirectories_attributes_error(path, true, {}, error)\n    if (error != null) {\n      throw new Error(error)\n    }\n    return result\n  },\n\n  readFile: function (path, encoding) {\n    var error = null\n    var result = NSString.stringWithContentsOfFile_encoding_error(path, encoding || NSUTF8StringEncoding, error)\n    if (error != null) {\n      throw new Error(error)\n    }\n    return result\n  },\n\n  writeFile: function (path, data, encoding) {\n    var error = null\n    var result\n    if (data.TIFFRepresentation) {\n      var tiffData = data.TIFFRepresentation()\n      var p = NSBitmapImageRep.imageRepWithData(tiffData)\n      var data = p.representationUsingType_properties(encoding || NSPNGFileType, null)\n      data.writeToFile_atomically(path, true)\n    } else {\n      result = NSString.stringWithString(data).writeToFile_atomically_encoding_error(path, true, encoding || NSUTF8StringEncoding, error)\n    }\n    if (error != null) {\n      throw new Error(error)\n    }\n    return result\n  },\n\n  rename: function (oldPath, newPath) {\n    var error = null\n    var result = NSFileManager.defaultManager().moveItemAtPath_toPath_error(oldPath, newPath, error)\n    if (error != null) {\n      throw new Error(error)\n    }\n    return result\n  },\n\n  rmdir: function (path) {\n    var error = null\n    var result = NSFileManager.defaultManager().removeItemAtPath_error(path, error)\n    if (error != null) {\n      throw new Error(error)\n    }\n    return result\n  }\n}\n","var kUUIDKey = 'google.analytics.uuid'\nvar uuid = NSUserDefaults.standardUserDefaults().objectForKey(kUUIDKey)\nif (!uuid) {\n  uuid = NSUUID.UUID().UUIDString()\n  NSUserDefaults.standardUserDefaults().setObject_forKey(uuid, kUUIDKey)\n}\n\nfunction jsonToQueryString(json) {\n  return '?' + Object.keys(json).map(function (key) {\n    return encodeURIComponent(key) + '=' + encodeURIComponent(json[key]);\n  }).join('&')\n}\n\nmodule.exports = function (context, trackingId, hitType, props) {\n  var payload = {\n    v: 1,\n    tid: trackingId,\n    ds: 'Sketch ' + NSBundle.mainBundle().objectForInfoDictionaryKey(\"CFBundleShortVersionString\"),\n    cid: uuid,\n    t: hitType,\n    an: context.plugin.name(),\n    aid: context.plugin.identifier(),\n    av: context.plugin.version()\n  }\n  if (props) {\n    Object.keys(props).forEach(function (key) {\n      payload[key] = props[key]\n    })\n  }\n\n  var url = NSURL.URLWithString(\n    NSString.stringWithFormat(\"https://www.google-analytics.com/collect%@\", jsonToQueryString(payload))\n  )\n\n  if (url) {\n    NSURLSession.sharedSession().dataTaskWithURL(url).resume()\n  }\n}\n","const SUITE_PREFIX = 'plugin.sketch.'\n\nfunction isPresent (data) {\n  return data != null\n}\n\nmodule.exports = {\n  getUserPreferences: function (pluginName, defaultPrefs) {\n    var prefs = {}\n    var store = NSUserDefaults.alloc().initWithSuiteName(SUITE_PREFIX + pluginName)\n    Object.keys(defaultPrefs).forEach(function (k) {\n      if (typeof defaultPrefs[k] === 'boolean') {\n        prefs[k] = isPresent(store.boolForKey(k)) ? Boolean(store.boolForKey(k)) : defaultPrefs[k]\n      } else if (typeof defaultPrefs[k] === 'number') {\n        prefs[k] = isPresent(store.doubleForKey(k)) ? store.doubleForKey(k) : defaultPrefs[k]\n      } else if (typeof defaultPrefs[k] === 'string') {\n        prefs[k] = isPresent(store.stringForKey(k)) ? '' + store.stringForKey(k) : defaultPrefs[k]\n      } else if (Array.isArray(defaultPrefs[k])) {\n        prefs[k] = store.arrayForKey(k) || defaultPrefs[k]\n      } else {\n        prefs[k] = store.dictionaryForKey(k) || defaultPrefs[k]\n      }\n    })\n    return prefs\n  },\n  setUserPreferences: function (pluginName, prefs) {\n    var store = NSUserDefaults.alloc().initWithSuiteName(SUITE_PREFIX + pluginName)\n    Object.keys(prefs).forEach(function (k) {\n      if (typeof prefs[k] === 'boolean') {\n        store.setBool_forKey(prefs[k], k)\n      } else if (typeof prefs[k] === 'number') {\n        store.setDouble_forKey(prefs[k], k)\n      } else {\n        store.setObject_forKey(prefs[k], k)\n      }\n    })\n    store.synchronize()\n  }\n}\n","import send from 'sketch-module-google-analytics'\nimport { getUserPreferences } from './preferences'\n\nconst key = 'UA-ffffff-1'\n\nexport function sendEvent (context, category, action, label, value) {\n  // const { sendAnalytics } = getUserPreferences(context)\n  // if (!sendAnalytics) { return }\n  // const payload = {}\n  // if (category) { payload.ec = category }\n  // if (action) { payload.ea = action }\n  // if (label) { payload.el = label }\n  // if (value) { payload.ev = value }\n\n  return true\n}\n\nexport function sendError (context, error) {\n  // const { sendAnalytics } = getUserPreferences(context)\n  // if (!sendAnalytics) { return }\n  return true\n}\n","// Commits all working file to git (cmd alt ctrl c)\nimport { sendEvent } from '../analytics'\nimport { getCurrentBranch, checkForFile, executeSafely, exec, createInputWithCheckbox, exportArtboards } from '../common'\nimport { getUserPreferences } from '../preferences'\n\nexport default function (context) {\n  if (!checkForFile(context)) { return }\n  executeSafely(context, function () {\n    sendEvent(context, 'Commit', 'Start commiting')\n    var currentBranch = getCurrentBranch(context)\n    const prefs = getUserPreferences(context)\n    var commitMsg = createInputWithCheckbox(context, 'Commit to \"' + currentBranch + '\"', 'Generate files for pretty diffs', prefs.diffByDefault, 'Commit')\n\n    if (commitMsg.responseCode == 1000 && commitMsg.message != null) {\n      if (commitMsg.checked) {\n        sendEvent(context, 'Commit', 'Export artboards')\n        exportArtboards(context, prefs)\n      }\n      sendEvent(context, 'Commit', 'Do commit')\n      var command = `git commit -m \"${commitMsg.message.split('\"').join('\\\\\"')}\" -a; exit`\n      var message = exec(context, command)\n      context.document.showMessage(message.split('\\n').join(' '))\n    }\n  })\n}\n","// Common library of things\nimport { sendError } from './analytics'\n\nconst Document = require('sketch/dom').Document;\n\nexport function setIconForAlert (context, alert) {\n  // alert.setIcon(NSImage.alloc().initWithContentsOfFile(\n  //   context.plugin.urlForResourceNamed('icon.png').path()))\n}\n\nexport function reloadCurrentSketchDocument (context) {\n  // Reload a sketch document currently open\n  var path = context.document.fileURL().path();\n  path = path + '';\n  context.document.close();\n  Document.open(path);\n  context.document.showMessage('Sketch file was reloaded with changes.')\n}\n\nexport function executeSafely (context, func) {\n  try {\n    func(context)\n  } catch (e) {\n    sendError(context, e)\n    createFailAlert(context, 'Failed...', e, true)\n  }\n}\n\nexport function exec (context, command) {\n  var task = NSTask.alloc().init()\n  var pipe = NSPipe.pipe()\n  var errPipe = NSPipe.pipe()\n\n  var path = getCurrentDirectory(context)\n  command = `cd \"${path}\" && ${command}`\n\n  task.setLaunchPath_('/bin/bash')\n  task.setArguments_(NSArray.arrayWithArray_(['-c', '-l', command]))\n  task.standardOutput = pipe\n  task.standardError = errPipe\n  task.launch()\n\n  const errData = errPipe.fileHandleForReading().readDataToEndOfFile()\n  const data = pipe.fileHandleForReading().readDataToEndOfFile()\n\n  if (task.terminationStatus() != 0) {\n    let message = 'Unknow error'\n    if (errData != null && errData.length()) {\n      message = NSString.alloc().initWithData_encoding_(errData, NSUTF8StringEncoding)\n    } else if (data != null && data.length()) {\n      message = NSString.alloc().initWithData_encoding_(data, NSUTF8StringEncoding)\n    }\n    return NSException.raise_format_('failed', message)\n  }\n\n  return NSString.alloc().initWithData_encoding_(data, NSUTF8StringEncoding)\n}\n\nexport function getCurrentDirectory (context) {\n  return context.document.fileURL().URLByDeletingLastPathComponent().path()\n}\n\nexport function getGitDirectory (context) {\n  return exec(context, 'git rev-parse --show-toplevel').trim().replace('\u001b(B\u001b[m', '')\n}\n\nexport function getCurrentFileName (context) {\n  return context.document.fileURL().lastPathComponent()\n}\n\nexport function createFailAlert (context, title, error, buttonToReport) {\n  console.log(error)\n  var alert = NSAlert.alloc().init()\n  alert.informativeText = '' + error\n  alert.messageText = title\n  alert.addButtonWithTitle('OK')\n  if (buttonToReport) {\n    alert.addButtonWithTitle('Report issue')\n  }\n  setIconForAlert(context, alert)\n\n  var responseCode = alert.runModal()\n\n  if (responseCode == 1001) {\n    var errorString = error\n    if (typeof error === 'object') {\n      try {\n        errorString = JSON.stringify(error, null, '\\t')\n        if (errorString === '{}') {\n          errorString = error\n        }\n      } catch (e) {}\n    }\n    var urlString = `https://github.com/mathieudutour/git-sketch-plugin/issues/new?body=${encodeURIComponent('### How did it happen?\\n1.\\n2.\\n3.\\n\\n\\n### Error log\\n\\n```\\n' + errorString + '\\n```')}`\n    var url = NSURL.URLWithString(urlString)\n    NSWorkspace.sharedWorkspace().openURL(url)\n  }\n\n  return {\n    responseCode\n  }\n}\n\nexport function createInput (context, msg, okLabel, cancelLabel) {\n  var accessory = NSView.alloc().initWithFrame(NSMakeRect(0, 0, 300, 50))\n  var input = NSTextField.alloc().initWithFrame(NSMakeRect(0, 25, 300, 25))\n  input.editable = true\n  accessory.addSubview(input)\n\n  var alert = NSAlert.alloc().init()\n  alert.setMessageText(msg)\n  alert.addButtonWithTitle(okLabel || 'OK')\n  alert.addButtonWithTitle(cancelLabel || 'Cancel')\n  setIconForAlert(context, alert)\n  alert.setAccessoryView(accessory)\n\n  var responseCode = alert.runModal()\n  var message = input.stringValue()\n\n  return {\n    responseCode: responseCode,\n    message: message\n  }\n}\n\nexport function createInputWithCheckbox (context, msg, checkboxMsg, checked, okLabel, cancelLabel) {\n  var accessory = NSView.alloc().initWithFrame(NSMakeRect(0, 0, 300, 100))\n  var input = TextArea(0, 25, 300, 75)\n  var checkbox = NSButton.alloc().initWithFrame(NSMakeRect(0, 0, 300, 25))\n  checkbox.setButtonType(3)\n  checkbox.title = checkboxMsg\n  checkbox.state = checked ? 1 : 0\n  accessory.addSubview(input.view)\n  accessory.addSubview(checkbox)\n\n  var alert = NSAlert.alloc().init()\n  alert.setMessageText(msg)\n  alert.addButtonWithTitle(okLabel || 'OK')\n  alert.addButtonWithTitle(cancelLabel || 'Cancel')\n  setIconForAlert(context, alert)\n  alert.setAccessoryView(accessory)\n\n  var responseCode = alert.runModal()\n  var message = input.getValue()\n\n  return {\n    responseCode: responseCode,\n    message: message,\n    checked: checkbox.state() == 1\n  }\n}\n\nexport function createSelect (context, msg, items, selectedItemIndex, okLabel, cancelLabel) {\n  selectedItemIndex = selectedItemIndex || 0\n\n  var accessory = NSComboBox.alloc().initWithFrame(NSMakeRect(0, 0, 200, 25))\n  accessory.addItemsWithObjectValues(items)\n  accessory.selectItemAtIndex(selectedItemIndex)\n\n  var alert = NSAlert.alloc().init()\n  alert.setMessageText(msg)\n  alert.addButtonWithTitle(okLabel || 'OK')\n  alert.addButtonWithTitle(cancelLabel || 'Cancel')\n  setIconForAlert(context, alert)\n  alert.setAccessoryView(accessory)\n\n  var responseCode = alert.runModal()\n  var sel = accessory.indexOfSelectedItem()\n\n  return {\n    responseCode: responseCode,\n    index: sel\n  }\n}\n\nexport function getCurrentBranch (context) {\n  const path = getCurrentDirectory(context)\n  const currentBranchCommand = `cd \"${path}\" && git rev-parse --abbrev-ref HEAD`\n  let branch\n  try {\n    branch = exec(context, currentBranchCommand).split('\\n')[0]\n  } catch (e) {\n    branch = 'master'\n  }\n  return branch\n}\n\nexport function exportArtboards (context, prefs) {\n  const currentFileName = getCurrentFileName(context)\n  const path = getCurrentDirectory(context)\n  const currentFileNameWithoutExtension = currentFileName.replace(/\\.sketch$/, '')\n  const {exportFolder, exportFormat, exportScale, includeOverviewFile} = prefs\n  const pluginPath = context.scriptPath.replace(/\\/Contents\\/Sketch\\/(\\w*)\\.js$/, '').replace(/ /g, '\\\\ ')\n  const bundlePath = NSBundle.mainBundle().bundlePath()\n  const fileFolder = exportFolder + '/' + currentFileNameWithoutExtension\n  const command = `${pluginPath}/exportArtboard.sh \"${path}\" \"${exportFolder}\" \"${fileFolder}\" \"${bundlePath}\" \"${currentFileName}\" \"${exportFormat || 'png'}\" \"${exportScale}\" \"${includeOverviewFile}\"`\n  return exec(context, command)\n}\n\nexport function copyCommandlet (context) {\n    const pluginPath = context.scriptPath.replace(/\\/Contents\\/Sketch\\/(\\w*)\\.js$/, '').replace(/ /g, '\\\\ ');\n    const path = getCurrentDirectory(context);\n    const command = `cp ${pluginPath}/generate-sketch-files.command ${path}/ && chmod +x ${path}/generate-sketch-files.command`;\n    return exec(context, command)\n}\n\nexport function checkForFile (context) {\n    try {\n        getCurrentFileName(context)\n        getCurrentDirectory(context)\n        return true\n    } catch (e) {\n        sendError(context, 'Missing file')\n        createFailAlert(context, 'Missing file', 'You need to open a sketch file before doing that')\n        return false\n    }\n}\n\nexport function checkForCommandlet (context) {\n    try {\n        // generate-sketch-files.command\n\n\n\n        getCurrentDirectory(context)\n        return true\n    } catch (e) {\n        sendError(context, 'Missing file')\n        createFailAlert(context, 'Missing file', 'You need to open a sketch file before doing that')\n        return false\n    }\n}\n\nexport function checkForGitRepository (context) {\n  try {\n    getGitDirectory(context)\n    return true\n  } catch (e) {\n    sendError(context, 'Not a git repository')\n    createFailAlert(context, 'Not a git repository', 'You need to init git repository first')\n    return false\n  }\n}\n\nfunction TextArea (x, y, width, heigh) {\n  const scrollView = NSScrollView.alloc().initWithFrame(NSMakeRect(x, y, width, heigh))\n  scrollView.borderStyle = NSLineBorder\n  const contentSize = scrollView.contentSize()\n  const input = NSTextView.alloc().initWithFrame(NSMakeRect(0, 0, contentSize.width, contentSize.height))\n  input.minSize = NSMakeSize(0, contentSize.height)\n  input.maxSize = NSMakeSize(contentSize.width, Infinity)\n  scrollView.documentView = input\n  return {\n    view: scrollView,\n    getValue: () => input.string()\n  }\n}\n","import prefsManager from 'sketch-module-user-preferences'\nimport fs from 'sketch-module-fs'\nimport {exec, getGitDirectory} from './common'\n\nconst keyPref = 'gitSketch'\nconst PREFS_FILE = '.gitsketchrc'\nconst LOCAL_PREFS = {\n  exportFolder: '.exportedArtboards',\n  exportFormat: 'png',\n  exportScale: '1.0',\n  includeOverviewFile: true,\n  autoExportOnSave: false\n}\nconst GLOBAL_PREFS = {\n  terminal: 'Terminal',\n  diffByDefault: true,\n  sendAnalytics: false\n}\n\nexport function getUserPreferences (context) {\n  // let localPrefs = {}\n  // try {\n  //   var path = getGitDirectory(context)\n  //   localPrefs = JSON.parse(fs.readFile(path + '/' + PREFS_FILE))\n  // } catch (e) {\n  //   console.log(e)\n  // }\n  // return Object.assign(\n  //   {},\n  //   LOCAL_PREFS,\n  //   prefsManager.getUserPreferences(keyPref, GLOBAL_PREFS),\n  //   localPrefs\n  // )\n\n    return {\n        exportFolder: '.exportedArtboards',\n        exportFormat: 'png',\n        exportScale: '1.0',\n        includeOverviewFile: true,\n        autoExportOnSave: false,\n        terminal: 'Terminal',\n        diffByDefault: true,\n        sendAnalytics: false\n    }\n}\n\nexport function setUserPreferences (context, prefs) {\n  const localPrefs = {}\n  const globalPrefs = {}\n  Object.keys(prefs).forEach(k => {\n    if (Object.keys(LOCAL_PREFS).indexOf(k) !== -1) {\n      localPrefs[k] = prefs[k]\n    } else {\n      globalPrefs[k] = prefs[k]\n    }\n  })\n\n  try {\n    var path = getGitDirectory(context)\n    fs.writeFile(path + '/' + PREFS_FILE, JSON.stringify(localPrefs, null, '  '))\n    exec(context, 'git add \"' + path + '/' + PREFS_FILE + '\"')\n  } catch (e) {\n    console.log(e)\n  }\n  return prefsManager.setUserPreferences(keyPref, globalPrefs)\n}\n","module.exports = require(\"sketch/dom\");"],"sourceRoot":""}